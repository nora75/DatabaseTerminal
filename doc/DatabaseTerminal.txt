*DatabaseTerminal.txt* Plugin for connect Database server from terminal
" Last Change: 05-Jul-2018.
" Maintainer: NORA75
" Licence: MIT
================================================================================
Description~

    This plugin may be changed in near future.

    Note:
    This plugin made for windows.It may be work in Linux,maybe.
    I can't care about any case.

================================================================================
CONTENTS~

1. Intro                                              |DatabaseTerminal-Intro|
2. Command                                          |DatabaseTerminal-command|
3. Mapping                                          |DatabaseTerminal-mapping|
4. Customization                              |DatabaseTerminal-customization|
5. Variables                                      |DatabaseTerminal-variables|
6. Autocmd                                          |DatabaseTerminal-autocmd|

================================================================================
                                                      *DatabaseTerminal-Intro*
Intro~

First: Set some variables.

    1. Set your database name to |g:DatabaseTerminal_dbName|.

    2. Set access to your database command to |g:DatabaseTerminal_dbRunCom|.

    3. Set optional args to |g:DatabaseTerminal_dbRunArgs| if you want.

Second: You can use this plugin.

    1. :DbTerminal command can open terminal and access to database.

    2. :DbStart command can start your database server manually.

Third: Theare are some customizable options.

    1. If you want to open in vsplit always set |g:DatabaseTerminal_alwaysVsplit|.

    2. If you want to output  execution result, see below variables description.

        + |g:DatabaseTerminal_folder|       
        + |g:DatabaseTerminal_fileName|     
        + |g:DatabaseTerminal_outputFormat| 
        + |g:DatabaseTerminal_outputExtens| 
        + |g:DatabaseTerminal_autodate|     
        + |g:DatabaseTerminal_autoOutput|

    Note:
    Be helpful -> |:let| |variables| |eval|

================================================================================
                                                    *DatabaseTerminal-command*
Command~

                                                                 *:DbTerminal*

:DbTerminal [{split}]

    Open new DbTerminal a terminal to access database server or Go to 
    current open DbTerminal.
    When {split} set to 'split',open DbTerminal in split.
    You can also set to 'vsplit'.Open DbTerminal in vsplit by default.
    You can specify cu to open DbTerminal in current buffer.
    You must set these variables to use this command.

    | name                         | set value                           |
    +------------------------------+-------------------------------------+
    | |g:DatabaseTerminal_dbName|    | start Database Server(Service) name |
    | |g:DatabaseTerminal_dbRunCom|  | access to Database Sever command    |
    | |g:DatabaseTerminal_dbRunArgs| | Optional args you want              |

    Note:
    DbTerminal is closed when disconnect to database server.
    You can open only one DbTeminal at same time.
    This command support to start and end Database Sever automatically if
    your current PC User is administrator in windows.

                                                                  *:DbTOutput*

:DbTOutput

    Output file to specified folder by |g:DatabaseTerminal_folder| and 
    |g:DatabaseTerminal_filename|.
    The output style can set by |g:DatabaseTerminal_outputExtens| and 
    |g:DatabaseTerminal_outputType|
    Append output lines if the file already exists.
    If you want to clear the current output lines,You can use |:DbTOutClear|.
    This command needs [Pandoc](https://pandoc.org/).

                                                             *:DbTOutPutClear*

:DbTOutPutClear

    Clear the current output lines.
    Note:
    This command can only clear output lines.Can't delete outputted file.

                                                             *:DbTOutPutDelete*

:DbTOutPutDelete

    Delete the current outputted file.
    Note:
    This command can only delete outputted file.Can't clear output lines.

                                                              *:DbTOutPutEdit*

:DbTOutPutEdit [{split}]

    Edit the current output lines in new buffer.
    The lines is saved when you close the buffer.
    When {split} set to 'split'.Open DbTerminal in split.
    You can also set to 'vsplit'.Open DbTerminal in vsplit.
    Note:
    You can't edit output lines of current running DbTerminal.

                                                                   *:DbTStart*

:DbTStart

    Start Database Sever if your acount is administrator in windows.

================================================================================
                                                    *DatabaseTerminal-mapping*
Mapping~

<Space>r

    Send command of the current or seleted by visual to opend DbTerminal.
    This mapping can use in only sql file and the buffer runned |:DbTerm| command.
    This command open new DbTerminal if it isn't open yet.

    Note:
    You can map any key using |map| command.
    Ex:
>
        nmap <Space>r <Plug>(DatabaseTerminal_runCom)
        vmap <Space>r <Plug>(DatabaseTerminal_runCom)
<
================================================================================
                                              *DatabaseTerminal-customization*
Customization~

--------------------------------------------------------------------------------
                                                  *DatabaseTerminal-variables*
Variables~

                                                   *g:DatabaseTerminal_dbName*

g:DatabaseTerminal_dbName

    Set your database name.
    This variable is used by start and end the database server.
    Default: not set

    Ex:
>
        let g:DatabaseTerminal_dbName = 'MySQL'
<
                                                 *g:DatabaseTerminal_dbRunCom*

g:DatabaseTerminal_dbRunCom

    Set access to your database command.
    This variable is used by start access to the database server in DbTerminal.
    Default: not set

    Ex:
>
        let g:DatabaseTerminal_dbRunCom = 'mysql'
<
                                                *g:DatabaseTerminal_dbRunArgs*

g:DatabaseTerminal_dbRunArgs

    Set optional args.
    This variable is used by start access to The Database Server in DbTerminal.
    Default: not set

    Ex:
>
        let g:DatabaseTerminal_dbRunArgs = '-u root -p'
<
                                             *g:DatabaseTerminal_alwaysVsplit*

g:DatabaseTerminal_alwaysVsplit

    Set true to open vsplit by default.
    Don't work when |g:DatabaseTerminal_openCmd| is set.
    Default: not set

    Ex:
>
        let g:DatabaseTerminal_alwaysVsplit = 1
<
                                                 |g:DatabaseTerminal_dontStop|
g:DatabaseTerminal_dontStop

    Set true to don't stop server when vim leave.
    Default: not set

    Ex:
>
        let g:DatabaseTerminal_dontStop = 1
<
                                                   *g:DatabaseTerminal_folder*

g:DatabaseTerminal_folder

    Set the folder of you want to output.
    You don't have to set this variables if you don't want to output any file.
    Default: home directory
    Note:
    Require to install pandoc if you want to output any file.

    Ex:
>
        let g:DatabaseTerminal_folder = expand('~')
        let g:DatabaseTerminal_folder = 'C:/samplefolder/'
<
                                                 *g:DatabaseTerminal_fileName*

g:DatabaseTerminal_fileName

    Set the file name of you want to output.
    You don't have to set this variables if you don't want to output any file.
    Default: DBlog
    Note:
    Require to install pandoc if you want to output any file.

    Ex:
>
        let g:DatabaseTerminal_fileName = 'log'
<
                                              *g:DatabaseTerminal_outputFormat*

g:DatabaseTerminal_outputFormat

    Set the file format of you want to output.
    This variable must set the name supported format by pandoc.
    You have to set |g:DatabaseTerminal_outputExtens| too.
    You don't have to set this variables if you don't want to output any file.
    Default: 'markdown'
    Note:
    Require to install pandoc if you want to output any file.

    Ex:
>
        let g:DatabaseTerminal_outputFormat = 'docx'
<
                                             *g:DatabaseTerminal_outputExtens*

g:DatabaseTerminal_outputExtens

    Set the file extension of you want to output.
    You have to set |g:DatabaseTerminal_outputFormat| too.
    You don't have to set this variables if you don't want to output any file.
    Default: 'md'
    Note:
    Require to install pandoc if you want to output any file.

    Ex:
>
        let g:DatabaseTerminal_outputExtens = 'docx'
<
                                                 *g:DatabaseTerminal_autodate*

g:DatabaseTerminal_autodate

    Set the true to if you want to add date to the output file automatically.
    You don't have to set this variables if you don't want to output any file.
    Default: not set
    Note:
    Require to install pandoc if you want to output any file.

    Ex:
>
        let g:DatabaseTerminal_autodate = 1
<
                                               *g:DatabaseTerminal_autoOutput*

g:DatabaseTerminal_autoOutput

    Set true to output file automatically when end vim.
    Default: not set
    Note:
    Require to install pandoc if you want to output any file.

    Ex:
>
        let g:DatabaseTerminal_autoOutput = 1
<
                                               *g:DatabaseTerminal_openCmd*

g:DatabaseTerminal_openCmd

    Set open new DbTerminal window command.
    Any open buffer or window command is ok because override last opend buffer
    to DbTerminal.
    Default: not set
    Note:
    You can't open multiple DbTerminal by this variable.

    Ex:
>
        let g:DatabaseTerminal_openCmd = 'bo 7new'
<
--------------------------------------------------------------------------------
                                                    *DatabaseTerminal-autocmd*
Autocmd

    When launched the DbTerminal,|'filetype'| option set to DbTerminal.
    You can use DbTerminal filetype on |FileType| event.
 
    Ex:
 >
        autocmd FileType DbTerminal call timer_start(0, function('s:ft'))
<
    When open the DbTOutPut buffer,|'filetype'| option set to DbTOut.
    You can use DbTOut filetype on |FileType| event.
 
    Ex:
 >
        autocmd FileType DbTOut call timer_start(0, function('s:ft'))
<

================================================================================
vim:tw=78:ts=8:ft=help:norl:nonu:
